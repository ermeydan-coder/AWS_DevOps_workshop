AWSTemplateFormatVersion: 2010-09-09
Description: |
  The Application files should be downloaded from Github repo and deployed on 
  EC2 Instance using user data script within cloudformation template.
  
Parameters:
  KeyPairName:
    Description: Enter the name of your Key Pair for SSH connections.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must one of the existing EC2 Keypair

Resources:
  WebServerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable HTTP for Flask Web Server
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  WebServerHost:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: ami-0947d2ba12ee1ff75
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref WebServerSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub Web Server of ${AWS::StackName}
      UserData: !Base64 |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install docker
          service docker start
          systemctl start docker
          systemctl enable docker
          gpasswd -a $USER docker
          newgrp docker
          curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)"\-o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          mkdir bookstore
          cd bookstore
          sudo wget https://raw.githubusercontent.com/ermeydan-coder/AWS_DevOps_workshop/master/devops/projects/201-dockerization-bookstore-api-on-python-flask-mysql/docker-compose.yml
          sudo wget https://raw.githubusercontent.com/ermeydan-coder/AWS_DevOps_workshop/master/devops/projects/201-dockerization-bookstore-api-on-python-flask-mysql/Dockerfile
          sudo wget https://raw.githubusercontent.com/ermeydan-coder/AWS_DevOps_workshop/master/devops/projects/201-dockerization-bookstore-api-on-python-flask-mysql/bookstore-api.py
          sudo wget https://raw.githubusercontent.com/ermeydan-coder/AWS_DevOps_workshop/master/devops/projects/201-dockerization-bookstore-api-on-python-flask-mysql/requirements.txt
          sudo docker-compose up
  
Outputs:
  WebsiteURL:
    Value: !Sub 
      - http://${PublicAddress}
      - PublicAddress: !GetAtt WebServerHost.PublicDnsName
    Description: Bookstore Web API Url